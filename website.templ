package main

import (
	"strconv"
)

templ websiteList(websites []Website) {
	<div>
		<ul>
			for _, webUrl := range websites {
				<li class="mb-2">
					<div>
						<a class="bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-600 focus:ring focus:ring-opacity-50 focus:ring-blue-300 focus:border-blue-300" href={ templ.URL(webUrl.websitePagesURL()) }>{ webUrl.BaseUrl }</a>
						@websiteDelete(webUrl)
					</div>
				</li>
			}
		</ul>
	</div>
}

templ editWebsite(website Website) {
	<div>
		<div class="mt-8">
			<details>
				<summary><div class="text-gray-700 font-bold mb-4">Edit { website.BaseUrl }</div></summary>
				<form hx-put={ website.websiteURL() } hx-swap="outerHTML" hx-target="#container" class="space-y-4 border border-gray-300 rounded p-4">
					<label for="websiteUrl" class="block text-sm font-medium text-gray-600">Website Url:</label>
					<input type="url" id="websiteUrl" name="websiteUrl" value={ website.BaseUrl } pattern="^https?://.*" required class="p-2 border rounded w-full focus:ring focus:ring-opacity-50 focus:ring-blue-300 focus:border-blue-300"/>
					<input type="text" id="websiteId" name="websiteId" value={  strconv.Itoa(int(website.ID)) } hidden="hidden" required/>
					<details>
						<summary>Login options</summary>
						<div class="space-y-4">
							<div class="flex space-x-4">
								<div class="w-1/2">
									<label for="loginName" class="block text-sm font-medium text-gray-600">loginName:</label>
									<input type="text" id="loginName" name="loginName" placeholder="bobby_tables" value={ website.LoginName  } class="w-full p-2 border rounded focus:ring focus:ring-opacity-50 focus:ring-blue-300 focus:border-blue-300"/>
								</div>
								<div class="w-1/2">
									<label for="loginPass" class="block text-sm font-medium text-gray-600">loginPass:</label>
									<input type="text" id="loginPass" name="loginPass" placeholder="Password123" value={ website.LoginPass } class="w-full p-2 border rounded focus:ring focus:ring-opacity-50 focus:ring-blue-300 focus:border-blue-300"/>
								</div>
							</div>
							<div class="flex space-x-4">
								<div class="w-1/2">
									<label for="loginNameSelector" class="block text-sm font-medium text-gray-600">loginNameSelector:</label>
									<input type="text" id="loginNameSelector" placeholder="input[id=&#39;username&#39;]" name="loginNameSelector" value={ website.LoginNameSelector } title="a CSS selector for the Login Name input box" class="w-full p-2 border rounded focus:ring focus:ring-opacity-50 focus:ring-blue-300 focus:border-blue-300"/>
								</div>
								<div class="w-1/2">
									<label for="loginPassSelector" class="block text-sm font-medium text-gray-600">loginPassSelector:</label>
									<input type="text" id="loginPassSelector" name="loginPassSelector" placeholder="input[id=&#39;password&#39;]" value={ website.LoginPassSelector } title="a CSS selector for the Password input box" class="w-full p-2 border rounded focus:ring focus:ring-opacity-50 focus:ring-blue-300 focus:border-blue-300"/>
								</div>
							</div>
							<label for="submitButtonSelector" class="block text-sm font-medium text-gray-600">SubmitButtonSelector:</label>
							<input type="text" id="submitButtonSelector" name="submitButtonSelector" value={ website.SubmitButtonSelector } title="a CSS selector for the submit button" class="w-full p-2 border rounded focus:ring focus:ring-opacity-50 focus:ring-blue-300 focus:border-blue-300"/>
							<label for="successIndicatorSelector" class="block text-sm font-medium text-gray-600">SuccessIndicatorSelector:</label>
							<input type="text" id="successIndicatorSelector" name="successIndicatorSelector" value={ website.SuccessIndicatorSelector } class="w-full p-2 border rounded focus:ring focus:ring-opacity-50 focus:ring-blue-300 focus:border-blue-300"/>
						</div>
					</details>
					<div class="mt-6">
						<input type="submit" value="Update website" class="w-full bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-600 focus:ring focus:ring-opacity-50 focus:ring-blue-300 focus:border-blue-300"/>
					</div>
					@login(website)
				</form>
			</details>
		</div>
	</div>
}

templ newWebsite() {
	<div>
		<div class="mt-8">
			<div class="text-gray-700 font-bold mb-4">A new site url:</div>
			<form hx-post="/" hx-swap="outerHTML" hx-target="#container" class="space-y-4">
				<label for="websiteUrl" class="block text-sm font-medium text-gray-600">Website Url:</label>
				<input type="url" id="websiteUrl" name="websiteUrl" pattern="^https?://.*" required class="p-2 border rounded w-full focus:ring focus:ring-opacity-50 focus:ring-blue-300 focus:border-blue-300"/>
				<input type="submit" value="Submit" class="bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-600 focus:ring focus:ring-opacity-50 focus:ring-blue-300 focus:border-blue-300"/>
			</form>
		</div>
	</div>
}

templ websiteDelete(website Website) {
	<div>
		<details>
			<summary>delete</summary>
			<button hx-target="#container" hx-loading="#loading" hx-delete={ website.websiteURLWithPostFix("pages") } class="bg-red-500 text-white py-2 px-4 rounded hover:bg-red-600 focus:ring focus:ring-opacity-50 focus:ring-red-300 focus:border-red-300">reset pages</button>
			<button hx-target="#container" hx-loading="#loading" hx-confirm="This will delete all info related to this website" hx-delete={ website.websiteURLWithPostFix("all") } class="bg-red-500 text-white py-2 px-4 rounded hover:bg-red-600 focus:ring focus:ring-opacity-50 focus:ring-red-300 focus:border-red-300">DELETE</button>
			<div id="loading" style="display:none">Loading...</div>
		</details>
	</div>
}

