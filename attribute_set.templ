package main

import (
	"strconv"
)

templ attributeSetSelect(attributeSets []AttributeSet, url string, selectedAttributeSetId uint) {
	<select
 		id="selectedAttributeSetId"
 		name="selectedAttributeSetId"
 		class="bg-white text-gray-700 p-4 border border-gray-300 rounded-md shadow-sm focus:border-indigo-500 focus:ring focus:ring-indigo-200 focus:ring-opacity-50"
 		hx-trigger="change"
 		hx-target="#container"
 		hx-get={ url }
 		hx-include="this"
	>
		<span class="htmx-indicator">@spinner()</span>
		<option
 			value=""
 			class="text-gray-500"
 			if selectedAttributeSetId == 0 {
				selected
			}
		>--Select a different attribute set--</option>
		for _, att := range attributeSets {
			<option
 				value={ strconv.Itoa(int(att.ID)) }
 				class="text-gray-700"
 				if selectedAttributeSetId == att.ID {
					selected
				}
			>{ att.Name }</option>
		}
	</select>
}

templ attributeSetSelected(attributeSets []AttributeSet, pageUrl string, websiteId uint, selectedAttributeSetId uint) {
	<div class="w-1/3 p-2">
		Attribute Set:
		<a href="/aset">(manage)</a>
		if selectedAttributeSetId == 0 {
			<div>
				@attributeSetSelect(attributeSets, pageUrl, selectedAttributeSetId)
			</div>
		} else {
			@attributeSetSelect(attributeSets, pageUrl, selectedAttributeSetId)
			<form hx-post={ attributeResultURL(websiteId, selectedAttributeSetId) }>
				<input required hidden id="selectedAttributeSetId" name="selectedAttributeSetId" value={ strconv.Itoa(int(selectedAttributeSetId)) }/>
				<!--<input required hidden id="page" name="page" value={ strconv.Itoa(int(page)) }/>
				<input required hidden id="page" name="page" value={ strconv.Itoa(int(limit)) }/>-->
				<button type="submit" class="inline-flex justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
					Run Attribute Set: (
					{ strconv.Itoa(int(selectedAttributeSetId)) }
					)
					<span class="htmx-indicator">@spinner()</span>
				</button>
				<div id={ AttributeSetResultGeneralId(websiteId, selectedAttributeSetId) }></div>
			</form>
			<button hx-get={ attributeResultURL(websiteId, selectedAttributeSetId) } hx-trigger="load">
				Re-load Attributes
				<span class="htmx-indicator">@spinner()</span>
			</button>
		}
	</div>
}

templ newAttributeSet() {
	<div class="p-4 shadow rounded-lg bg-white  border border-gray-400 rounded-md">
		<form hx-post="/aset" hx-target="#aset-container" class="space-y-4 ">
			<div>
				<label for="setName" class="block text-sm font-medium text-gray-700">Attribute Set Name</label>
				<input
 					type="text"
 					name="setName"
 					id="setName"
 					class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm"
 					placeholder="Enter attribute set name"
				/>
			</div>
			<button type="submit" class="inline-flex justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
				Create AttributeSet
				<span class="htmx-indicator">@spinner()</span>
			</button>
		</form>
	</div>
}

templ attributeSetContainer(attributes []Attribute, attributeSets []AttributeSet, attributeModels []AttributeModel, message string) {
	<html>
		@header("Attribute Sets")
		<body>
			@nav("Attribute Sets")
			<div class="flex" id="aset-container">
				@attributeSetList(attributes, attributeSets, attributeModels, message)
			</div>
		</body>
	</html>
}

templ attributeSetList(attributes []Attribute, attributeSets []AttributeSet, attributeModels []AttributeModel, message string) {
	<div class="p-4">
		<p class="text-lg font-semibold text-gray-700">{ message }</p>
	</div>
	<div class="flex flex-grow -mx-2">
		<div class="w-full px-2 mb-4">
			@newAttributeSet()
			@newAttribute(attributeModels)
		</div>
		<div class="w-full px-2 mb-4">
			for _, aset := range attributeSets {
				<div class="border border-gray-400 rounded-md">
					<h1 class="text-xl font-bold text-gray-800 mb-2">{ aset.Name }</h1>
					Attributes:
					for _, alink := range aset.AttributeSetLinks {
						for _, a := range attributes {
							if a.ID == alink.ID {
								@attribute(a)
							}
						}
					}
					@createAttributeSetLink(attributes, aset)
				</div>
			}
		</div>
	</div>
}

templ createAttributeSetLink(attributes []Attribute, attributeSet AttributeSet) {
	<div class="p-4 shadow rounded-lg bg-white">
		<form hx-post={ attributeSetURL(attributeSet.ID) } hx-target="#aset-container" class="space-y-4">
			<div>
				<label for="attributeId" class="block text-sm font-medium text-gray-700">Select Attribute</label>
				<select name="attributeId" id="attributeId" class="mt-1 block w-full p-4 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
					for _, a := range attributes {
						<option value={ strconv.Itoa(int(a.ID)) }>{ a.AISeedQuery }</option>
					}
				</select>
			</div>
			<button type="submit" class="inline-flex justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
				Assign Attribute
				<span class="htmx-indicator">@spinner()</span>
			</button>
		</form>
	</div>
}

/*

templ assignAttributeToSet(attributeSet AttributeSet) {
	<div class="p-4 shadow rounded-lg bg-white">
		<form hx-post={ attributeSetURL(attributeSet.ID) } hx-swap="#attribute-assignment-container" class="space-y-4">
			<div>
				<label for="attributeSetId" class="block text-sm font-medium text-gray-700">Select AttributeSet</label>
				<input name="attributeSetId" id="attributeSetId" value={ strconv.Itoa(int(attributeSet.ID)) }/>
			</div>
			<div>
				<label for="attributeSeedQuery" class="block text-sm font-medium text-gray-700">Attribute Seed Query</label>
				<textarea
 					name="attributeSeedQuery"
 					id="attributeSeedQuery"
 					rows="3"
 					class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm"
 					placeholder="Enter attribute seed query"
				></textarea>
			</div>
			<button type="submit" class="inline-flex justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
				Assign Attribute
				<span class="htmx-indicator">@spinner()</span>
			</button>
			for _, a := range attributeSet.Attributes {
				<div>{ a.AISeedQuery }</div>
			}
		</form>
	</div>
}

*/

